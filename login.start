#!/usr/bin/bash

PUT(){ echo -en "\033[${1};${2}H";}
HIDCRSR(){ echo -en "\033[?25l";}
NORM(){ echo -en "\033[?12l\033[?25h";}

command -v figlet > /dev/null 2>&1 || { pkg install figlet -y &> /dev/null ; connection="$(ping -c 1 -q www.google.com >&/dev/null; echo $?)"
if [[ "$connection" != 0 ]]
then clear
echo -e "\033[1;91m[\033[1;92m-\033[1;91m] No Internet\033[1;92m connection!"
   exit
fi; }

command -v ruby > /dev/null 2>&1 || { echo -e >&2 "\033[1;91mI require ruby but it's not installed, Now Installing.\e[0m"; pkg install ruby -y; clear; connection="$(ping -c 1 -q www.google.com >&/dev/null; echo $?)"
if [[ "$connection" != 0 ]]
then clear
echo -e "\033[1;91m[\033[1;92m-\033[1;91m] No Internet\033[1;92m connection!"
   exit
fi; }

command -v lolcat > /dev/null 2>&1 || { echo -e >&2 "\033[1;91mI require lolcat but it's not installed, Now Installing.\e[0m"; gem install lolcat; clear; connection="$(ping -c 1 -q www.google.com >&/dev/null; echo $?)"
if [[ "$connection" != 0 ]]
then clear
echo -e "\033[1;91m[\033[1;92m-\033[1;91m] No Internet\033[1;92m connection!"
   exit
fi; }

command -v pv > /dev/null 2>&1 || { echo -e >&2 "\033[1;91mI require pv but it's not installed, Now Installing.\e[0m"; pkg install pv -y; clear; connection="$(ping -c 1 -q www.google.com >&/dev/null; echo $?)"
if [[ "$connection" != 0 ]]
then clear
echo -e "\033[1;91m[\033[1;92m-\033[1;91m] No Internet\033[1;92m connection!"
   exit
fi; }

exit_on_signal_SIGINT () {
   { printf "\n\n\e[0;1;48;2;200;0;0m            Program interrupted.          \e[0m" 2>&1; echo; }
    echo -ne "\033]12;#b4e1fd\007"
    NORM
    exit 0
}

exit_on_signal_SIGTERM () {
    { printf "\n\n\e[0;1;48;2;200;0;0m           Program terminated.           \e[0m" 2>&1; echo; }
    echo -ne "\033]12;#b4e1fd\007"
    NORM
    exit 0
}

trap exit_on_signal_SIGINT SIGINT ; trap exit_on_signal_SIGTERM SIGTERM

echo -ne "\033]12;#363636\007"; clear; sleep 0.4; echo -e "\e[0;1m
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
█                                        █
█\e[1;38;2;0;230;118m █   █▀█ █▀▀ █ █▄ █  █▀ █▀▀ ▀█▀ █ █ █▀█\e[0;1m █
█\e[0;1;38;2;41;121;255m █▄▄ █▄█ █▄█ █ █ ▀█  ▄█ ██▄  █  █▄█ █▀▀\e[0;1m █
█                                        █
█ \e[0;1;7m     Coding by - abhackerofficial     \e[0;1m █
█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█
";sleep 0
echo -e "\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓";sleep 0
echo -e "\e[0;1m┃\e[0;1;30;48;2;0;230;118m [1] Advanced (Login Page)              \e[0;1m┃";sleep 0
echo -e "\e[0;1m┃\e[0;1;48;2;41;121;255m [2] Animated (Login Page)              \e[0;1m┃";sleep 0
echo -e "\e[0;1m┃\e[0;1;30;48;2;200;255;0m [3] Auto-Bot (Login Page)              \e[0;1m┃";sleep 0
echo -e "\e[0;1m┃\e[0;1;30;48;2;0;234;0m [4] Change Colors & Scheme             \e[0;1m┃";sleep 0
echo -e "\e[0;1m┃\e[0;1;30;48;2;0;255;255m [5] Customize Header [Beta]            \e[0;1m┃";sleep 0
echo -e "\e[0;1m┃\e[0;1;48;2;40;90;255m [6] Update [Login Page]                \e[0;1m┃";sleep 0
echo -e "\e[0;1m┃\e[0;1;48;2;200;0;0m [7] Reset to Default                   \e[0;1m┃";NORM
echo -e "\e[0;1m┃\e[0;1;48;2;101;31;255m [8] Backups Previous Login             \e[0;1m┃";sleep 0
echo -e "\e[0;1m┃\e[0;1;48;2;101;31;255m [9] Restore Previous Login             \e[0;1m┃";sleep 0
echo -e "\e[0;1m┃\e[0;1;7m [!] Choose an option :                 \e[0;1m┃";sleep 0
echo -e "\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛";sleep 0
PUT 20 26
printf "\e[0;1;7m"
read option

if [[ $option = "01" ]] || [[ $option = "1" ]]; then
if [ -f "$PREFIX/tmp/adv.success" ];then
cd $PREFIX/tmp ; rm adv.success ;fi

cd $HOME/Login-Page/programs
echo -ne "\033]12;#b4e1fd\007";echo;bash advance-login
cd $HOME/Login-Page/temp
chmod +x login.enc
mv login.enc $PREFIX/etc
if [ ! -d "$PREFIX/etc/login-config" ];then cd $PREFIX/etc ; mkdir login-config ; fi
if [ ! -d "$PREFIX/etc/login-config/header" ];then cd $HOME/Login-Page ; cp -rf header $PREFIX/etc/login-config ; fi
if [ ! -d "$PREFIX/etc/login-config/colour-scheme" ];then cd $HOME/Login-Page ; cp -rf colour-scheme $PREFIX/etc/login-config ; fi
if [ -f "$PREFIX/etc/motd" ];then rm $PREFIX/etc/motd &> /dev/null ; fi
if [ ! -d "$HOME/.oh-my-zsh" ];then cd $PREFIX/etc ; rm bash.bashrc
echo 'if [ -x $PREFIX/libexec/termux/command-not-found ]; then' > bash.bashrc
echo '        command_not_found_handle() {' >> bash.bashrc
echo '                $PREFIX/libexec/termux/command-not-found "$1"' >> bash.bashrc
echo '        }' >> bash.bashrc
echo 'fi' >> bash.bashrc
echo >> bash.bashrc
echo "PS1='\$ '" >> bash.bashrc
echo 'bash $PREFIX/etc/login.enc' >> bash.bashrc ;fi
if [ -d "$HOME/.oh-my-zsh" ];then cd $PREFIX/etc ; rm zshrc
echo '. $PREFIX/etc/profile' > zshrc
echo 'command_not_found_handler() {' >> zshrc
echo '        $PREFIX/libexec/termux/command-not-found $1' >> zshrc
echo '}' >> zshrc
echo '#set nomatch so *.sh would not error if no file is available' >> zshrc
echo 'setopt +o nomatch' >> zshrc
echo '. $PREFIX/etc/profile' >> zshrc
echo "PS1='%# '" >> zshrc
echo 'bash $PREFIX/etc/login.enc' >> zshrc ;fi
cd $HOME/Login-Page/programs
cp motd.login $PREFIX/etc/login-config
cp forgot.login $PREFIX/etc/login-config

elif [[ $option = "02" ]] || [[ $option = "2" ]]; then
if [ -f "$PREFIX/tmp/anim.success" ];then
cd $PREFIX/tmp ; rm anim.success ;fi

cd $HOME/Login-Page/programs
echo -ne "\033]12;#b4e1fd\007";echo;bash animat-login
cd $HOME/Login-Page/temp
chmod +x login.enc
mv login.enc $PREFIX/etc
if [ ! -d "$PREFIX/etc/login-config" ];then cd $PREFIX/etc ; mkdir login-config ; fi
if [ ! -d "$PREFIX/etc/login-config/header" ];then cd $HOME/Login-Page ; cp -rf header $PREFIX/etc/login-config ; fi
if [ ! -d "$PREFIX/etc/login-config/colour-scheme" ];then cd $HOME/Login-Page ; cp -rf colour-scheme $PREFIX/etc/login-config ; fi
if [ -f "$PREFIX/etc/motd" ];then rm $PREFIX/etc/motd &> /dev/null ;fi
if [ ! -d "$HOME/.oh-my-zsh" ];then cd $PREFIX/etc ; rm bash.bashrc
echo 'if [ -x $PREFIX/libexec/termux/command-not-found ]; then' > bash.bashrc
echo '        command_not_found_handle() {' >> bash.bashrc
echo '                $PREFIX/libexec/termux/command-not-found "$1"' >> bash.bashrc
echo '        }' >> bash.bashrc
echo 'fi' >> bash.bashrc
echo >> bash.bashrc
echo "PS1='\$ '" >> bash.bashrc
echo 'bash $PREFIX/etc/login.enc' >> bash.bashrc ;fi
if [ -d "$HOME/.oh-my-zsh" ];then cd $PREFIX/etc ; rm zshrc
echo '. $PREFIX/etc/profile' > zshrc
echo 'command_not_found_handler() {' >> zshrc
	echo '        $PREFIX/libexec/termux/command-not-found $1' >> zshrc
echo '}' >> zshrc
echo '#set nomatch so *.sh would not error if no file is available' >> zshrc
echo 'setopt +o nomatch' >> zshrc
echo '. $PREFIX/etc/profile' >> zshrc
echo "PS1='%# '" >> zshrc
echo 'bash $PREFIX/etc/login.enc' >> zshrc ;fi
cd $HOME/Login-Page/programs
cp motd.login $PREFIX/etc/login-config
cp forgot.login $PREFIX/etc/login-config

elif [[	$option = "03" ]] || [[ $option = "3" ]]; then
if [ -f "$PREFIX/tmp/bot.success" ];then
cd $PREFIX/tmp ; rm bot.success ;fi

cd $HOME/Login-Page/programs
echo -ne "\033]12;#b4e1fd\007";echo;bash autobot-login
cd $HOME/Login-Page/temp
chmod +x login.enc
mv login.enc $PREFIX/etc
if [ ! -d "$PREFIX/etc/login-config" ];then cd $PREFIX/etc ; mkdir login-config ; fi
if [ ! -d "$PREFIX/etc/login-config/header" ];then cd $HOME/Login-Page ; cp -rf header $PREFIX/etc/login-config ; fi
if [ ! -d "$PREFIX/etc/login-config/colour-scheme" ];then cd $HOME/Login-Page ; cp -rf colour-scheme $PREFIX/etc/login-config ; fi
if [ -f "$PREFIX/etc/motd" ];then rm $PREFIX/etc/motd &> /dev/null ;fi
if [ ! -d "$HOME/.oh-my-zsh" ];then cd $PREFIX/etc ; rm bash.bashrc
echo 'if [ -x $PREFIX/libexec/termux/command-not-found ]; then' > bash.bashrc
echo '        command_not_found_handle() {' >> bash.bashrc
echo '                $PREFIX/libexec/termux/command-not-found "$1"' >> bash.bashrc
echo '        }' >> bash.bashrc
echo 'fi' >> bash.bashrc
echo >> bash.bashrc
echo "PS1='\$ '" >> bash.bashrc
echo 'bash $PREFIX/etc/login.enc' >> bash.bashrc ;fi
if [ -d "$HOME/.oh-my-zsh" ];then cd $PREFIX/etc ; rm zshrc
echo '. $PREFIX/etc/profile' > zshrc
echo 'command_not_found_handler() {' >> zshrc
	echo '        $PREFIX/libexec/termux/command-not-found $1' >> zshrc
echo '}' >> zshrc
echo '#set nomatch so *.sh would not error if no file is available' >> zshrc
echo 'setopt +o nomatch' >> zshrc
echo '. $PREFIX/etc/profile' >> zshrc
echo "PS1='%# '" >> zshrc
echo 'bash $PREFIX/etc/login.enc' >> zshrc ;fi
cd $HOME/Login-Page/programs
cp motd.login $PREFIX/etc/login-config

elif [[ $option = "04" ]] || [[ $option = "4" ]]; then
printf "\e[0m"
cd $HOME/Login-Page/programs
bash colour.login
elif [[ $option = "05" ]] || [[ $option = "5" ]]; then
cd $HOME/Login-Page/programs
echo -ne "\033]12;#b4e1fd\007";echo -e "\e[0m";bash header.login
elif [[ $option = "06" ]] || [[ $option = "6" ]]; then
echo;cd $HOME/Login-Page/programs
bash update.login;echo
elif [[ $option = "07" ]] || [[ $option = "7" ]]; then
cd $HOME/Login-Page/programs
bash reset.login
elif [[ $option = "08" ]] || [[ $option = "8" ]]; then
cd $HOME/Login-Page/programs
bash backup.login
elif [[ $option = "09" ]] || [[ $option = "9" ]]; then
cd $HOME/Login-Page/programs
bash restore.login
elif [[ $option = "exit" ]] || [[ $option = "Exit" ]] || [[ $option = "EXIT" ]] || [[ $option = "kill" ]] || [[ $option = "Kill" ]] || [[ $option = "KILL" ]] || [[ $option = "bye" ]] || [[ $option = "Bye" ]] || [[ $option = "BYE" ]];then echo;echo -e "\e[0;1;30;48;2;200;255;255m  [!] Closing Login-Page...               \e[0m";echo -e "\033]12;#b4e1fd\007"; exit
else echo;echo -e "\e[0;48;2;200;0;0m Input not found, you entered wrong Input!\e[0m";echo ;fi; echo -ne "\033]12;#b4e1fd\007"
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
